# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '../panneau_de_controle.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from expConfig import ExpConfig
from calBox import CalBox

from Phidget22.Devices.VoltageInput import VoltageInput
from pHmeter import *

class ControlPannel(object):
    #Pour instancier la classe ControlPannel on doit renseigner un attribut PHMeter et un Spectrometer
    def __init__(self, phm: PHMeter, spectro: str): 
        self.phmeter=phm
        self.spectrometer=spectro
        self.calib_text = "Données de la calibration courante:\n"+"date et heure: "+str(self.phmeter.currentCALdate)+"\n"+"température: "+str(self.phmeter.currentCALtemperature)+"\nnombre de points: "+str(self.phmeter.currentCALtype)+"\nTensions mesurées: "+str(self.phmeter.currentU1)+" "+str(self.phmeter.currentU2)+" "+str(self.phmeter.currentU3)+"\ncoefficents de calibration actuels: a="+str(self.phmeter.current_a)+", b="+str(self.phmeter.current_b)
        print("init de control pannel")
        self.wrong=0

    def setOnDirectPH(self, ch, voltage):
        #print(self, ch, voltage)
        a=self.phmeter.current_a
        b=self.phmeter.current_b
        pH = volt2pH(a,b,voltage)
        self.direct_pH.display(pH)

    def openConfigWindow(self):
        self.window = QtWidgets.QDialog()
        self.ui = ExpConfig()
        self.ui.setupUi(self.window)
        self.window.show()

    def openCalibWindow(self):
        self.window = QtWidgets.QDialog()
        self.ui = CalBox(self.phmeter, self)
        self.ui.setupUi(self.window)
        self.window.show()

    def onCalibrationChange(self):
        #calib_text = "Données de la calibration courante:\n"+"date et heure: "+str(self.phmeter.currentCALdate)+"\n"+"température: "+str(self.phmeter.currentCALtemperature)+"\nnombre de points: "+str(self.phmeter.currentCALtype)+"\nTensions mesurées: "+str(self.phmeter.currentU1)+" "+str(self.phmeter.currentU2)+" "+str(self.phmeter.currentU3)+"coefficents de calibration actuels: a="+str(self.phmeter.current_a)+", b="+str(self.phmeter.current_b)
        self.calib_text = "Données de la calibration courante:\n"+"date et heure: "+str(self.phmeter.currentCALdate)+"\n"+"température: "+str(self.phmeter.currentCALtemperature)+"\nnombre de points: "+str(self.phmeter.currentCALtype)+"\nTensions mesurées: "+str(self.phmeter.currentU1)+" "+str(self.phmeter.currentU2)+" "+str(self.phmeter.currentU3)+"\ncoefficents de calibration actuels: a="+str(self.phmeter.current_a)+", b="+str(self.phmeter.current_b)
        self.calText.clear()
        self.calText.appendPlainText(self.calib_text)
        if self.phmeter.current_a==0:
            self.wrong=1
            print("Calibration erronée")
        #print("calibration change")

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(900, 700)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.direct_pH = QtWidgets.QLCDNumber(self.centralwidget)
        self.direct_pH.setGeometry(QtCore.QRect(530, 60, 91, 51))
        self.direct_pH.setObjectName("direct_pH")
        self.direct_pH.setNumDigits(6)
        self.electrode_is_stable = QtWidgets.QProgressBar(self.centralwidget)
        self.electrode_is_stable.setGeometry(QtCore.QRect(650, 90, 81, 21))
        self.electrode_is_stable.setMaximum(4)
        self.electrode_is_stable.setProperty("value", 2)
        self.electrode_is_stable.setTextVisible(False)
        self.electrode_is_stable.setObjectName("electrode_is_stable")
        self.Abs_direct = QtWidgets.QGraphicsView(self.centralwidget)
        self.Abs_direct.setGeometry(QtCore.QRect(10, 50, 501, 331))
        self.Abs_direct.setObjectName("Abs_direct")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(530, 30, 71, 31))
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(10, 10, 421, 41))
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(650, 50, 71, 41))
        self.label_3.setObjectName("label_3")
        self.plainTextEdit = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit.setGeometry(QtCore.QRect(30, 430, 121, 51))
        self.plainTextEdit.setObjectName("plainTextEdit")
        self.label_4 = QtWidgets.QLabel(self.centralwidget)
        self.label_4.setGeometry(QtCore.QRect(30, 390, 191, 41))
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(30, 500, 81, 31))
        self.label_5.setObjectName("label_5")
        self.plainTextEdit_2 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.plainTextEdit_2.setGeometry(QtCore.QRect(30, 540, 121, 51))
        self.plainTextEdit_2.setObjectName("plainTextEdit_2")
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(190, 550, 271, 41))
        self.checkBox.setObjectName("checkBox")
        self.checkBox_2 = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_2.setGeometry(QtCore.QRect(190, 440, 281, 41))
        self.checkBox_2.setObjectName("checkBox_2")
        self.calText = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.calText.setGeometry(QtCore.QRect(530, 160, 350, 220))
        self.calText.setSizeIncrement(QtCore.QSize(0, 0))
        self.calText.setObjectName("calText")
        #calib_text = "Données de la calibration courante:\n"+"date et heure: "+str(self.phmeter.currentCALdate)+"\n"+"température: "+str(self.phmeter.currentCALtemperature)+"\nnombre de points: "+str(self.phmeter.currentCALtype)+"\nTensions mesurées: "+str(self.phmeter.currentU1)+" "+str(self.phmeter.currentU2)+" "+str(self.phmeter.currentU3)+"coefficents de calibration actuels: a="+str(self.phmeter.current_a)+", b="+str(self.phmeter.current_b)
        self.calText.appendPlainText(self.calib_text)
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(530, 115, 211, 41))
        self.label_6.setObjectName("label_6")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.openConfigWindow())
        self.pushButton.setGeometry(QtCore.QRect(530, 530, 211, 51))
        self.pushButton.setObjectName("pushButton")
        self.pushButton_2 = QtWidgets.QPushButton(self.centralwidget, clicked = lambda: self.openCalibWindow())
        self.pushButton_2.setGeometry(QtCore.QRect(530, 430, 211, 51))
        self.pushButton_2.setObjectName("pushButton_2")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 18))
        self.menubar.setObjectName("menubar")
        self.menuPanneau_de_controle = QtWidgets.QMenu(self.menubar)
        self.menuPanneau_de_controle.setObjectName("menuPanneau_de_controle")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuPanneau_de_controle.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        #activation de l'actualisation de la tension
        self.phmeter.voltagechannel.setOnVoltageChangeHandler(self.setOnDirectPH)
        if self.phmeter.getIsOpen():
            U=self.phmeter.voltagechannel.getVoltage()  #valeur actuelle de tension
            pH=volt2pH(self.phmeter.current_a,self.phmeter.current_b,U)
            self.direct_pH.display(pH)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.electrode_is_stable.setFormat(_translate("MainWindow", "%p%"))
        self.label.setText(_translate("MainWindow", "pH"))
        self.label_2.setText(_translate("MainWindow", "Absorbance direct et référence"))
        self.label_3.setText(_translate("MainWindow", "électrode stable"))
        self.label_4.setText(_translate("MainWindow", "integration time (ms)"))
        self.label_5.setText(_translate("MainWindow", "average"))
        self.checkBox.setText(_translate("MainWindow", "non linearity correction"))
        self.checkBox_2.setText(_translate("MainWindow", "electric dark correction"))
        self.label_6.setText(_translate("MainWindow", "dernière calibration"))
        self.pushButton.setText(_translate("MainWindow", "lancement du titrage"))
        self.pushButton_2.setText(_translate("MainWindow", "calibration"))
        self.menuPanneau_de_controle.setTitle(_translate("MainWindow", "Panneau de contrôle"))


if __name__ == "__main__":
    spec = 'spectromètre'
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    #if getIs
    try: #si le pH mètre est connecté
        ch = VoltageInput()
        ch.setDeviceSerialNumber(432846)
        ch.setChannel(0)
        ch.openWaitForAttachment(1000)
        ch.setOnVoltageChangeHandler(PHMeter.doOnVoltageChange)

        phm = PHMeter(ch)
        phm.configure_pHmeter()
        print("pH mètre connecté")
        ui = ControlPannel(phm,spec)
        ui.setupUi(MainWindow)
        ui.phmeter.voltagechannel.setOnVoltageChangeHandler(ui.setOnDirectPH)
    except: #pH mètre non connecté
        #phm = 'pH mètre'
        print("blabla")
        print("pH mètre non connecté")
        ui = ControlPannel(spec)
        print("blabla")
        ui.setupUi(MainWindow)
        print("ui setup")
    finally:
        MainWindow.show()        
        sys.exit(app.exec_())