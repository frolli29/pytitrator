# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ui_files/spectro_param.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_spectro_config(object):
    def setupUi(self, spectro_config):
        spectro_config.setObjectName("spectro_config")
        spectro_config.resize(1799, 954)
        spectro_config.setAccessibleName("")
        self.buttonBox = QtWidgets.QDialogButtonBox(spectro_config)
        self.buttonBox.setGeometry(QtCore.QRect(1690, 850, 81, 71))
        self.buttonBox.setOrientation(QtCore.Qt.Vertical)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Cancel|QtWidgets.QDialogButtonBox.Ok)
        self.buttonBox.setObjectName("buttonBox")
        self.darkSpectrum = QtWidgets.QGraphicsView(spectro_config)
        self.darkSpectrum.setGeometry(QtCore.QRect(960, 20, 521, 291))
        self.darkSpectrum.setObjectName("darkSpectrum")
        self.abs_courante = QtWidgets.QGraphicsView(spectro_config)
        self.abs_courante.setGeometry(QtCore.QRect(10, 50, 941, 621))
        self.abs_courante.setObjectName("abs_courante")
        self.label_dark = QtWidgets.QLabel(spectro_config)
        self.label_dark.setGeometry(QtCore.QRect(1560, 130, 191, 31))
        self.label_dark.setObjectName("label_dark")
        self.reference = QtWidgets.QGraphicsView(spectro_config)
        self.reference.setGeometry(QtCore.QRect(960, 320, 521, 311))
        self.reference.setObjectName("reference")
        self.label_ref = QtWidgets.QLabel(spectro_config)
        self.label_ref.setGeometry(QtCore.QRect(1560, 440, 91, 31))
        self.label_ref.setObjectName("label_ref")
        self.intensity = QtWidgets.QGraphicsView(spectro_config)
        self.intensity.setGeometry(QtCore.QRect(960, 640, 521, 291))
        self.intensity.setObjectName("intensity")
        self.label_intensity = QtWidgets.QLabel(spectro_config)
        self.label_intensity.setGeometry(QtCore.QRect(1560, 760, 101, 31))
        self.label_intensity.setObjectName("label_intensity")
        self.label_abs = QtWidgets.QLabel(spectro_config)
        self.label_abs.setGeometry(QtCore.QRect(20, 10, 91, 31))
        self.label_abs.setObjectName("label_abs")
        self.refresh_dark_spectrum = QtWidgets.QPushButton(spectro_config)
        self.refresh_dark_spectrum.setGeometry(QtCore.QRect(1560, 180, 81, 31))
        self.refresh_dark_spectrum.setObjectName("refresh_dark_spectrum")
        self.refresh_ref = QtWidgets.QPushButton(spectro_config)
        self.refresh_ref.setGeometry(QtCore.QRect(1560, 490, 81, 31))
        self.refresh_ref.setObjectName("refresh_ref")
        self.Tint = QtWidgets.QSpinBox(spectro_config)
        self.Tint.setGeometry(QtCore.QRect(30, 710, 71, 31))
        self.Tint.setMinimum(1)
        self.Tint.setMaximum(1000)
        self.Tint.setProperty("value", 10)
        self.Tint.setObjectName("Tint")
        self.label_tint = QtWidgets.QLabel(spectro_config)
        self.label_tint.setGeometry(QtCore.QRect(30, 680, 71, 21))
        self.label_tint.setObjectName("label_tint")
        self.label_avg = QtWidgets.QLabel(spectro_config)
        self.label_avg.setGeometry(QtCore.QRect(180, 680, 81, 21))
        self.label_avg.setObjectName("label_avg")
        self.avg = QtWidgets.QSpinBox(spectro_config)
        self.avg.setGeometry(QtCore.QRect(180, 710, 71, 31))
        self.avg.setMinimum(1)
        self.avg.setMaximum(500)
        self.avg.setProperty("value", 1)
        self.avg.setObjectName("avg")
        self.shutter = QtWidgets.QCheckBox(spectro_config)
        self.shutter.setGeometry(QtCore.QRect(340, 710, 131, 31))
        self.shutter.setObjectName("shutter")
        self.acquisition_delay_display = QtWidgets.QLabel(spectro_config)
        self.acquisition_delay_display.setGeometry(QtCore.QRect(30, 770, 251, 31))
        self.acquisition_delay_display.setObjectName("acquisition_delay_display")
        self.processing_delay_display = QtWidgets.QLabel(spectro_config)
        self.processing_delay_display.setGeometry(QtCore.QRect(30, 820, 251, 31))
        self.processing_delay_display.setObjectName("processing_delay_display")
        self.refresh_rate_display = QtWidgets.QLabel(spectro_config)
        self.refresh_rate_display.setGeometry(QtCore.QRect(30, 870, 261, 31))
        self.refresh_rate_display.setObjectName("refresh_rate_display")

        self.retranslateUi(spectro_config)
        self.buttonBox.accepted.connect(spectro_config.accept) # type: ignore
        self.buttonBox.rejected.connect(spectro_config.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(spectro_config)

    def retranslateUi(self, spectro_config):
        _translate = QtCore.QCoreApplication.translate
        spectro_config.setWindowTitle(_translate("spectro_config", "Spectrometry Configuration"))
        self.label_dark.setText(_translate("spectro_config", "Dark Spectrum"))
        self.label_ref.setText(_translate("spectro_config", "Référence"))
        self.label_intensity.setText(_translate("spectro_config", "Intensité"))
        self.label_abs.setText(_translate("spectro_config", "Absorbance"))
        self.refresh_dark_spectrum.setText(_translate("spectro_config", "refresh"))
        self.refresh_ref.setText(_translate("spectro_config", "refresh"))
        self.label_tint.setText(_translate("spectro_config", "T int"))
        self.label_avg.setText(_translate("spectro_config", "averaging"))
        self.shutter.setText(_translate("spectro_config", "Shutter"))
        self.acquisition_delay_display.setText(_translate("spectro_config", "durée d\'acquisition : "))
        self.processing_delay_display.setText(_translate("spectro_config", "durée de calcul : "))
        self.refresh_rate_display.setText(_translate("spectro_config", "période de rafraîchissement : "))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    spectro_config = QtWidgets.QDialog()
    ui = Ui_spectro_config()
    ui.setupUi(spectro_config)
    spectro_config.show()
    sys.exit(app.exec_())
