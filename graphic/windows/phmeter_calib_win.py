# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'graphic/ui_files/phmeter_calib.ui'
#
# Created by: PyQt5 UI code generator 5.15.11
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_calibration_window(object):
    def setupUi(self, calibration_window):
        calibration_window.setObjectName("calibration_window")
        calibration_window.resize(440, 290)
        self.buttonBox = QtWidgets.QDialogButtonBox(calibration_window)
        self.buttonBox.setGeometry(QtCore.QRect(190, 220, 231, 51))
        self.buttonBox.setOrientation(QtCore.Qt.Horizontal)
        self.buttonBox.setStandardButtons(QtWidgets.QDialogButtonBox.Apply|QtWidgets.QDialogButtonBox.Cancel)
        self.buttonBox.setObjectName("buttonBox")
        self.lcdNumber = QtWidgets.QLCDNumber(calibration_window)
        self.lcdNumber.setGeometry(QtCore.QRect(210, 80, 211, 131))
        self.lcdNumber.setObjectName("lcdNumber")
        self.label = QtWidgets.QLabel(calibration_window)
        self.label.setGeometry(QtCore.QRect(260, 40, 131, 41))
        self.label.setObjectName("label")
        self.U_ph4 = QtWidgets.QLCDNumber(calibration_window)
        self.U_ph4.setGeometry(QtCore.QRect(30, 50, 71, 51))
        self.U_ph4.setObjectName("U_ph4")
        self.U_ph7 = QtWidgets.QLCDNumber(calibration_window)
        self.U_ph7.setGeometry(QtCore.QRect(30, 130, 71, 51))
        self.U_ph7.setObjectName("U_ph7")
        self.U_ph10 = QtWidgets.QLCDNumber(calibration_window)
        self.U_ph10.setGeometry(QtCore.QRect(30, 210, 71, 51))
        self.U_ph10.setObjectName("U_ph10")
        self.button_ph4 = QtWidgets.QPushButton(calibration_window)
        self.button_ph4.setGeometry(QtCore.QRect(130, 210, 51, 51))
        self.button_ph4.setObjectName("button_ph4")
        self.button_ph7 = QtWidgets.QPushButton(calibration_window)
        self.button_ph7.setGeometry(QtCore.QRect(130, 130, 51, 51))
        self.button_ph7.setObjectName("button_ph7")
        self.button_ph10 = QtWidgets.QPushButton(calibration_window)
        self.button_ph10.setGeometry(QtCore.QRect(130, 50, 51, 51))
        self.button_ph10.setObjectName("button_ph10")
        self.label_2 = QtWidgets.QLabel(calibration_window)
        self.label_2.setGeometry(QtCore.QRect(30, 10, 151, 31))
        self.label_2.setObjectName("label_2")
        self.label_indications = QtWidgets.QLabel(calibration_window)
        self.label_indications.setGeometry(QtCore.QRect(20, 20, 501, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        self.label_indications.setFont(font)
        self.label_indications.setAlignment(QtCore.Qt.AlignCenter)
        self.label_indications.setObjectName("label_indications")


        self.retranslateUi(calibration_window)
        self.buttonBox.accepted.connect(calibration_window.accept) # type: ignore
        self.buttonBox.rejected.connect(calibration_window.reject) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(calibration_window)

    def retranslateUi(self, calibration_window):
        _translate = QtCore.QCoreApplication.translate
        calibration_window.setWindowTitle(_translate("calibration_window", "pH meter calibration"))
        self.label.setText(_translate("calibration_window", "live voltage (mV)"))
        self.button_ph10.setText(_translate("calibration_window", "pH10"))
        self.button_ph7.setText(_translate("calibration_window", "pH7"))
        self.button_ph4.setText(_translate("calibration_window", "pH4"))
        self.label_2.setText(_translate("calibration_window", "Recorded Voltages"))
        self.label_indications.setText(_translate("calibration_window", "Click on corresponding pH when voltage stabilizes\nClick apply to save"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    calibration_window = QtWidgets.QDialog()
    ui = Ui_calibration_window()
    ui.setupUi(calibration_window)
    calibration_window.show()
    sys.exit(app.exec_())
